{
  "name" : "swrg-slcl-sdp-chunk-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint int_max(int a, int b){\n  { return a> b ? a : b; }\n}\nint int_min(int a, int b){\n  { return a < b ? a: b;  }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int min1 = (dpRes < alpha) ? dpRes : alpha;\n int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n return (min1 > min2) ? min1 : min2;\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__120385, const global int* restrict v__120386, const global int* restrict v__120387, const global int* restrict v__120388, int v__120389, int v__120390, global int* v__120403, global int* v__120397, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__120393; \n  int v__120398; \n  /* Private Memory */\n  int v__120395_0;\n  \n  for (int v_wg_id_120380 = get_group_id(0); v_wg_id_120380 < ((v_MHeight_2)/(128)); v_wg_id_120380 = (v_wg_id_120380 + get_num_groups(0))) {\n    for (int v_l_id_120381 = get_local_id(0); v_l_id_120381 < 128; v_l_id_120381 = (v_l_id_120381 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_120382 = 0; v_i_120382 < v_MWidthC_1; v_i_120382 = (1 + v_i_120382)) {\n        int v_tmp_120447 = -2147483648; \n        v__120393 = v_tmp_120447; \n        int v_index_120448 = v__120385[(v_i_120382 + (128 * v_MWidthC_1 * v_wg_id_120380) + (v_MWidthC_1 * v_l_id_120381))]; \n        if (v_index_120448 < 0) {\n          v__120395_0 = v__120393; \n        } else {\n          if (v_index_120448 >= v_VLength_3) {\n            v__120395_0 = v__120393; \n          } else {\n            v__120395_0 = v__120387[v_index_120448]; \n          }\n        }\n        v__120397[(-1 + v_MWidthC_1 + (128 * v_MWidthC_1 * v_wg_id_120380) + (-1 * v_i_120382) + (v_MWidthC_1 * v_l_id_120381))] = int_max(v__120395_0, v__120386[(v_i_120382 + (128 * v_MWidthC_1 * v_wg_id_120380) + (v_MWidthC_1 * v_l_id_120381))]); \n      }\n      /* end map_seq */\n      int v_tmp_120449 = -2147483648; \n      v__120398 = v_tmp_120449; \n      /* reduce_seq */\n      for (int v_i_120383 = 0; v_i_120383 < v_MWidthC_1; v_i_120383 = (1 + v_i_120383)) {\n        v__120398 = int_min(v__120398, v__120397[(v_i_120383 + (128 * v_MWidthC_1 * v_wg_id_120380) + (v_MWidthC_1 * v_l_id_120381))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_120384 = 0; \n        v__120403[(v_l_id_120381 + (128 * v_wg_id_120380))] = doubleAndOr(v__120398, v__120389, v__120388[(v_l_id_120381 + (128 * v_wg_id_120380))], v__120390); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "128",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__120385",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__120386",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__120387",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__120388",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__120389",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__120390",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__120397",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__120403",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}