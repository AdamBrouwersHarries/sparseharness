{
  "name" : "glb-sdp",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint int_max(int a, int b){\n  { return a> b ? a : b; }\n}\nint int_min(int a, int b){\n  { return a < b ? a: b;  }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int min1 = (dpRes < alpha) ? dpRes : alpha;\n int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n return (min1 > min2) ? min1 : min2;\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__106537, const global int* restrict v__106538, const global int* restrict v__106539, const global int* restrict v__106540, int v__106541, int v__106542, global int* v__106555, global int* v__106549, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__106545; \n  int v__106550; \n  /* Private Memory */\n  int v__106547_0;\n  \n  for (int v_gl_id_106533 = get_global_id(0); v_gl_id_106533 < v_MHeight_2; v_gl_id_106533 = (v_gl_id_106533 + get_global_size(0))) {\n    /* map_seq */\n    for (int v_i_106534 = 0; v_i_106534 < v_MWidthC_1; v_i_106534 = (1 + v_i_106534)) {\n      int v_tmp_106587 = -2147483648; \n      v__106545 = v_tmp_106587; \n      int v_index_106588 = v__106537[(v_i_106534 + (v_MWidthC_1 * v_gl_id_106533))]; \n      if (v_index_106588 < 0) {\n        v__106547_0 = v__106545; \n      } else {\n        if (v_index_106588 >= v_VLength_3) {\n          v__106547_0 = v__106545; \n        } else {\n          v__106547_0 = v__106539[v_index_106588]; \n        }\n      }\n      v__106549[(-1 + v_MWidthC_1 + (-1 * v_i_106534) + (v_MWidthC_1 * v_gl_id_106533))] = int_max(v__106547_0, v__106538[(v_i_106534 + (v_MWidthC_1 * v_gl_id_106533))]); \n    }\n    /* end map_seq */\n    int v_tmp_106589 = -2147483648; \n    v__106550 = v_tmp_106589; \n    /* reduce_seq */\n    for (int v_i_106535 = 0; v_i_106535 < v_MWidthC_1; v_i_106535 = (1 + v_i_106535)) {\n      v__106550 = int_min(v__106550, v__106549[(v_i_106535 + (v_MWidthC_1 * v_gl_id_106533))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_106536 = 0; \n      v__106555[v_gl_id_106533] = doubleAndOr(v__106550, v__106541, v__106540[v_gl_id_106533], v__106542); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__106537",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__106538",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__106539",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__106540",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__106541",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__106542",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__106549",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__106555",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}