{
  "name" : "swrg-slcl-pmdp",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint int_min(int a, int b){\n  \n{\n int result = min(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint int_max(int a, int b){\n  \n{\n int result = max(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint doubleMinMax(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n //int min1 = (dpRes < alpha) ? dpRes : alpha;\n //int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n int min1 = min(dpRes, alpha);\n int min2 = min(rowIdxPair2, beta);\n int result = max(min1, min2);\n\n //printf(\"Input: dpres: %d, alpha: %d, yvecelem: %d, beta: %d, min1: %d, min2: %d, result: %d\\n\", dpRes, alpha, rowIdxPair2, beta, min1, min2, result);\n\n return result;\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__106725, const global int* restrict v__106726, const global int* restrict v__106727, const global int* restrict v__106728, int v__106729, int v__106730, global int* v__106743, global int* v__106737, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__106733; \n  int v__106738; \n  /* Private Memory */\n  int v__106735_0;\n  \n  for (int v_wg_id_106721 = get_group_id(0); v_wg_id_106721 < v_MHeight_2; v_wg_id_106721 = (v_wg_id_106721 + get_num_groups(0))) {\n    for (int v_l_id_106722 = get_local_id(0); v_l_id_106722 < v_MWidthC_1; v_l_id_106722 = (v_l_id_106722 + get_local_size(0))) {\n      int v_tmp_106783 = -2147483648; \n      v__106733 = v_tmp_106783; \n      int v_index_106784 = v__106725[(v_l_id_106722 + (v_MWidthC_1 * v_wg_id_106721))]; \n      if (v_index_106784 < 0) {\n        v__106735_0 = v__106733; \n      } else {\n        if (v_index_106784 >= v_VLength_3) {\n          v__106735_0 = v__106733; \n        } else {\n          v__106735_0 = v__106727[v_index_106784]; \n        }\n      }\n      v__106737[(-1 + v_MWidthC_1 + (-1 * v_l_id_106722) + (v_MWidthC_1 * v_wg_id_106721))] = int_min(v__106735_0, v__106726[(v_l_id_106722 + (v_MWidthC_1 * v_wg_id_106721))]); \n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n    int v_tmp_106785 = -2147483648; \n    v__106738 = v_tmp_106785; \n    /* reduce_seq */\n    for (int v_i_106723 = 0; v_i_106723 < v_MWidthC_1; v_i_106723 = (1 + v_i_106723)) {\n      v__106738 = int_max(v__106738, v__106737[(v_i_106723 + (v_MWidthC_1 * v_wg_id_106721))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_106724 = 0; \n      v__106743[v_wg_id_106721] = doubleMinMax(v__106738, v__106729, v__106728[v_wg_id_106721], v__106730); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__106725",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__106726",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__106727",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__106728",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__106729",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__106730",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__106737",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__106743",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}