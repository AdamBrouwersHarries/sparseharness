{
  "name" : "awrg-alcl-alcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__58746, const global int* restrict v__58747, const global int* restrict v__58748, const global int* restrict v__58749, int v__58750, int v__58751, global int* v__58771, global int* v__58753, local int* v__58766, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__58755; \n  int v__58757; \n  int v__35768; \n  /* Private Memory */\n  int v__58759_0;\n  \n  int v__58761_0;\n  \n  int v__58765_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4456 = v__58753; \n    local int v_w_id_58739; \n    if (get_local_id(0) == 0) {\n      v_w_id_58739 = atomic_inc(v_work_idx_4456); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_58739 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4454; \n        v_work_idx_4454 = 0; \n        int v_l_id_58740 = atomic_inc(&(v_work_idx_4454)); \n        while((v_l_id_58740 < v_MWidthC_1)){\n          int v_tmp_58825 = 0; \n          v__58755 = v_tmp_58825; \n          /* reduce_while_seq */\n          for (int v_i_58741 = 0; v_i_58741 < 512; v_i_58741 = (1 + v_i_58741)) {\n            v__58765_0 = check(v__58755, v__58746[(v_l_id_58740 + (512 * v_MWidthC_1 * v_w_id_58739) + (v_MWidthC_1 * v_i_58741))]); \n            if (v__58765_0) {\n            } else {\n              break;\n            }\n            int v_tmp_58826 = 0; \n            v__58757 = v_tmp_58826; \n            int v_index_58827 = v__58746[(v_l_id_58740 + (512 * v_MWidthC_1 * v_w_id_58739) + (v_MWidthC_1 * v_i_58741))]; \n            if (v_index_58827 < 0) {\n              v__58759_0 = v__58757; \n            } else {\n              if (v_index_58827 >= v_VLength_3) {\n                v__58759_0 = v__58757; \n              } else {\n                v__58759_0 = v__58748[v_index_58827]; \n              }\n            }\n            v__58761_0 = bool_and(v__58759_0, v__58747[(v_l_id_58740 + (512 * v_MWidthC_1 * v_w_id_58739) + (v_MWidthC_1 * v_i_58741))]); \n            v__58755 = bool_or(v__58761_0, v__58755); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_58742 = 0; \n            v__58766[v_l_id_58740] = id(v__58755); \n          }\n          /* end map_seq */\n          v_l_id_58740 = atomic_inc(&(v_work_idx_4454)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4449; \n        v_work_idx_4449 = 0; \n        int v_l_id_58743 = atomic_inc(&(v_work_idx_4449)); \n        while((v_l_id_58743 < 1)){\n          int v_tmp_58830 = 0; \n          v__35768 = v_tmp_58830; \n          /* reduce_seq */\n          for (int v_i_58744 = 0; v_i_58744 < v_MWidthC_1; v_i_58744 = (1 + v_i_58744)) {\n            v__35768 = bool_or(v__35768, v__58766[(v_i_58744 + (v_MWidthC_1 * v_l_id_58743))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_58745 = 0; \n            v__58771[v_w_id_58739] = doubleAndOr(v__35768, v__58750, v__58749[v_w_id_58739], v__58751); \n          }\n          /* end map_seq */\n          v_l_id_58743 = atomic_inc(&(v_work_idx_4449)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_58739 = atomic_inc(v_work_idx_4456); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__58746",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__58747",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__58748",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__58749",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__58750",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__58751",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__58753",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__58771",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__58766",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}