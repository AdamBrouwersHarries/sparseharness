{
  "name" : "glb-sdp-rsa",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint id(int x){\n  { return x; }\n}\nkernel void KERNEL(const global int* restrict v__44692, const global int* restrict v__44693, const global int* restrict v__44694, const global int* restrict v__44695, int v__44696, int v__44697, global int* v__44711, global int* v__44710, int v_MHeight_2, int v_MWidthC_1){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__44699; \n  int v__44702; \n  /* Private Memory */\n  int v__44704; \n  int v__44706; \n  for (int v_gl_id_44688 = get_global_id(0); v_gl_id_44688 < v_MHeight_2; v_gl_id_44688 = (v_gl_id_44688 + get_global_size(0))) {\n    int v_tmp_44736 = 0; \n    v__44699 = v_tmp_44736; \n    /* reduce_seq */\n    int v_stop_44737 = min(v__44692[(1 + (v__44692[v_gl_id_44688] / 4))], v__44693[(1 + (v__44693[v_gl_id_44688] / 4))]); \n    for (int v_i_44689 = 0; v_i_44689 < v_stop_44737; v_i_44689 = (1 + v_i_44689)) {\n      int v_tmp_44742 = 0; \n      v__44702 = v_tmp_44742; \n      int v_index_44744 = v__44692[(2 + v_i_44689 + (v__44692[v_gl_id_44688] / 4))]; \n      if (v_index_44744 < 0) {\n        v__44704 = v__44702; \n      } else {\n        if (v_index_44744 >= v_MWidthC_1) {\n          v__44704 = v__44702; \n        } else {\n          v__44704 = v__44694[v_index_44744]; \n        }\n      }\n      v__44706 = bool_and(v__44693[(2 + v_i_44689 + (v__44693[v_gl_id_44688] / 4))], v__44704); \n      v__44699 = bool_or(v__44699, v__44706); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_44690 = 0; \n      v__44710[v_gl_id_44688] = doubleAndOr(v__44699, v__44696, v__44695[v_gl_id_44688], v__44697); \n    }\n    /* end map_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_44691 = 0; \n      v__44711[v_gl_id_44688] = id(v__44710[v_gl_id_44688]); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "arrayType" : "ragged"
  },
  "inputArgs" : [ {
    "variable" : "v__44692",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__44693",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__44694",
    "addressSpace" : "global",
    "size" : "(4*v_MWidthC_1)"
  }, {
    "variable" : "v__44695",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__44696",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__44697",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__44710",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  } ],
  "outputArg" : {
    "variable" : "v__44711",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC" ],
  "outputSize" : "(4*v_MHeight_2)"
}