{
  "name" : "glb-sdp",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__32769, const global int* restrict v__32770, const global int* restrict v__32771, const global int* restrict v__32772, int v__32773, int v__32774, global int* v__32787, global int* v__32781, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__32777; \n  int v__32782; \n  /* Private Memory */\n  int v__32779_0;\n  \n  for (int v_gl_id_32765 = get_global_id(0); v_gl_id_32765 < v_MHeight_2; v_gl_id_32765 = (v_gl_id_32765 + get_global_size(0))) {\n    /* map_seq */\n    for (int v_i_32766 = 0; v_i_32766 < v_MWidthC_1; v_i_32766 = (1 + v_i_32766)) {\n      int v_tmp_32819 = 0; \n      v__32777 = v_tmp_32819; \n      int v_index_32820 = v__32769[(v_i_32766 + (v_MWidthC_1 * v_gl_id_32765))]; \n      if (v_index_32820 < 0) {\n        v__32779_0 = v__32777; \n      } else {\n        if (v_index_32820 >= v_VLength_3) {\n          v__32779_0 = v__32777; \n        } else {\n          v__32779_0 = v__32771[v_index_32820]; \n        }\n      }\n      v__32781[(-1 + v_MWidthC_1 + (-1 * v_i_32766) + (v_MWidthC_1 * v_gl_id_32765))] = bool_and(v__32779_0, v__32770[(v_i_32766 + (v_MWidthC_1 * v_gl_id_32765))]); \n    }\n    /* end map_seq */\n    int v_tmp_32821 = 0; \n    v__32782 = v_tmp_32821; \n    /* reduce_seq */\n    for (int v_i_32767 = 0; v_i_32767 < v_MWidthC_1; v_i_32767 = (1 + v_i_32767)) {\n      v__32782 = bool_or(v__32782, v__32781[(v_i_32767 + (v_MWidthC_1 * v_gl_id_32765))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_32768 = 0; \n      v__32787[v_gl_id_32765] = doubleAndOr(v__32782, v__32773, v__32772[v_gl_id_32765], v__32774); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__32769",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__32770",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__32771",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__32772",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__32773",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__32774",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__32781",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__32787",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}