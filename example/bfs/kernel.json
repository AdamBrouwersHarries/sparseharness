{
  "name" : "swrg-slcl-pmdp",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__44426, const global int* restrict v__44427, const global int* restrict v__44428, const global int* restrict v__44429, int v__44430, int v__44431, global int* v__44444, global int* v__44438, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__44434; \n  int v__44439; \n  /* Private Memory */\n  int v__44436_0;\n  \n  for (int v_wg_id_44422 = get_group_id(0); v_wg_id_44422 < v_MHeight_2; v_wg_id_44422 = (v_wg_id_44422 + get_num_groups(0))) {\n    for (int v_l_id_44423 = get_local_id(0); v_l_id_44423 < v_MWidthC_1; v_l_id_44423 = (v_l_id_44423 + get_local_size(0))) {\n      int v_tmp_44484 = 0; \n      v__44434 = v_tmp_44484; \n      int v_index_44485 = v__44426[(v_l_id_44423 + (v_MWidthC_1 * v_wg_id_44422))]; \n      if (v_index_44485 < 0) {\n        v__44436_0 = v__44434; \n      } else {\n        if (v_index_44485 >= v_VLength_3) {\n          v__44436_0 = v__44434; \n        } else {\n          v__44436_0 = v__44428[v_index_44485]; \n        }\n      }\n      v__44438[(-1 + v_MWidthC_1 + (-1 * v_l_id_44423) + (v_MWidthC_1 * v_wg_id_44422))] = bool_and(v__44436_0, v__44427[(v_l_id_44423 + (v_MWidthC_1 * v_wg_id_44422))]); \n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n    int v_tmp_44486 = 0; \n    v__44439 = v_tmp_44486; \n    /* reduce_seq */\n    for (int v_i_44424 = 0; v_i_44424 < v_MWidthC_1; v_i_44424 = (1 + v_i_44424)) {\n      v__44439 = bool_or(v__44439, v__44438[(v_i_44424 + (v_MWidthC_1 * v_wg_id_44422))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_44425 = 0; \n      v__44444[v_wg_id_44422] = doubleAndOr(v__44439, v__44430, v__44429[v_wg_id_44422], v__44431); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__44426",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__44427",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__44428",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__44429",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__44430",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__44431",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__44438",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__44444",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}