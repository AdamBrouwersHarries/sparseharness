{
  "name" : "swrg-slcl-pmdp",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__32957, const global int* restrict v__32958, const global int* restrict v__32959, const global int* restrict v__32960, int v__32961, int v__32962, global int* v__32975, global int* v__32969, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__32965; \n  int v__32970; \n  /* Private Memory */\n  int v__32967_0;\n  \n  for (int v_wg_id_32953 = get_group_id(0); v_wg_id_32953 < v_MHeight_2; v_wg_id_32953 = (v_wg_id_32953 + get_num_groups(0))) {\n    for (int v_l_id_32954 = get_local_id(0); v_l_id_32954 < v_MWidthC_1; v_l_id_32954 = (v_l_id_32954 + get_local_size(0))) {\n      int v_tmp_33015 = 0; \n      v__32965 = v_tmp_33015; \n      int v_index_33016 = v__32957[(v_l_id_32954 + (v_MWidthC_1 * v_wg_id_32953))]; \n      if (v_index_33016 < 0) {\n        v__32967_0 = v__32965; \n      } else {\n        if (v_index_33016 >= v_VLength_3) {\n          v__32967_0 = v__32965; \n        } else {\n          v__32967_0 = v__32959[v_index_33016]; \n        }\n      }\n      v__32969[(-1 + v_MWidthC_1 + (-1 * v_l_id_32954) + (v_MWidthC_1 * v_wg_id_32953))] = bool_and(v__32967_0, v__32958[(v_l_id_32954 + (v_MWidthC_1 * v_wg_id_32953))]); \n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n    int v_tmp_33017 = 0; \n    v__32970 = v_tmp_33017; \n    /* reduce_seq */\n    for (int v_i_32955 = 0; v_i_32955 < v_MWidthC_1; v_i_32955 = (1 + v_i_32955)) {\n      v__32970 = bool_or(v__32970, v__32969[(v_i_32955 + (v_MWidthC_1 * v_wg_id_32953))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_32956 = 0; \n      v__32975[v_wg_id_32953] = doubleAndOr(v__32970, v__32961, v__32960[v_wg_id_32953], v__32962); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__32957",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__32958",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__32959",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__32960",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__32961",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__32962",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__32969",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__32975",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}