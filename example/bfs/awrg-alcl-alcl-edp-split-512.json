{
  "name" : "awrg-alcl-alcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nkernel void KERNEL(const global int* restrict v__56388, const global int* restrict v__56389, const global int* restrict v__56390, const global int* restrict v__56391, int v__56392, int v__56393, global int* v__56413, global int* v__56395, local int* v__56408, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__56397; \n  int v__56399; \n  int v__33398; \n  /* Private Memory */\n  int v__56401_0;\n  \n  int v__56403_0;\n  \n  int v__56407_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4448 = v__56395; \n    local int v_w_id_56381; \n    if (get_local_id(0) == 0) {\n      v_w_id_56381 = atomic_inc(v_work_idx_4448); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_56381 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4446; \n        v_work_idx_4446 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_56382 = atomic_inc(&(v_work_idx_4446)); \n        while((v_l_id_56382 < v_MWidthC_1)){\n          int v_tmp_56467 = 0; \n          v__56397 = v_tmp_56467; \n          /* reduce_while_seq */\n          for (int v_i_56383 = 0; v_i_56383 < 512; v_i_56383 = (1 + v_i_56383)) {\n            v__56407_0 = check(v__56397, v__56388[(v_l_id_56382 + (512 * v_MWidthC_1 * v_w_id_56381) + (v_MWidthC_1 * v_i_56383))]); \n            if (v__56407_0) {\n            } else {\n              break;\n            }\n            int v_tmp_56468 = 0; \n            v__56399 = v_tmp_56468; \n            int v_index_56469 = v__56388[(v_l_id_56382 + (512 * v_MWidthC_1 * v_w_id_56381) + (v_MWidthC_1 * v_i_56383))]; \n            if (v_index_56469 < 0) {\n              v__56401_0 = v__56399; \n            } else {\n              if (v_index_56469 >= v_VLength_3) {\n                v__56401_0 = v__56399; \n              } else {\n                v__56401_0 = v__56390[v_index_56469]; \n              }\n            }\n            v__56403_0 = bool_and(v__56401_0, v__56389[(v_l_id_56382 + (512 * v_MWidthC_1 * v_w_id_56381) + (v_MWidthC_1 * v_i_56383))]); \n            v__56397 = bool_or(v__56403_0, v__56397); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56384 = 0; \n            v__56408[v_l_id_56382] = id(v__56397); \n          }\n          /* end map_seq */\n          v_l_id_56382 = atomic_inc(&(v_work_idx_4446)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4441; \n        v_work_idx_4441 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_56385 = atomic_inc(&(v_work_idx_4441)); \n        while((v_l_id_56385 < 1)){\n          int v_tmp_56472 = 0; \n          v__33398 = v_tmp_56472; \n          /* reduce_seq */\n          for (int v_i_56386 = 0; v_i_56386 < v_MWidthC_1; v_i_56386 = (1 + v_i_56386)) {\n            v__33398 = bool_or(v__33398, v__56408[(v_i_56386 + (v_MWidthC_1 * v_l_id_56385))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56387 = 0; \n            v__56413[v_w_id_56381] = doubleAndOr(v__33398, v__56392, v__56391[v_w_id_56381], v__56393); \n          }\n          /* end map_seq */\n          v_l_id_56385 = atomic_inc(&(v_work_idx_4441)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_56381 = atomic_inc(v_work_idx_4448); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__56388",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56389",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56390",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56391",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56392",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56393",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56395",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__56413",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__56408",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}