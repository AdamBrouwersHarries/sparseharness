{
  "name" : "awrg-alcl-alcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__135422, const global float* restrict v__135423, const global float* restrict v__135424, const global float* restrict v__135425, float v__135426, float v__135427, global float* v__135447, global int* v__135429, local float* v__135442, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__135431; \n  float v__135433; \n  float v__105970; \n  /* Private Memory */\n  float v__135435_0;\n  \n  float v__135437_0;\n  \n  int v__135441_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_10926 = v__135429; \n    local int v_w_id_135415; \n    if (get_local_id(0) == 0) {\n      v_w_id_135415 = atomic_inc(v_work_idx_10926); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_135415 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_10924; \n        v_work_idx_10924 = 0; \n        int v_l_id_135416 = atomic_inc(&(v_work_idx_10924)); \n        while((v_l_id_135416 < v_MWidthC_1)){\n          float v_tmp_135501 = 0.0f; \n          v__135431 = v_tmp_135501; \n          /* reduce_while_seq */\n          for (int v_i_135417 = 0; v_i_135417 < 512; v_i_135417 = (1 + v_i_135417)) {\n            v__135441_0 = check(v__135431, v__135422[(v_l_id_135416 + (512 * v_MWidthC_1 * v_w_id_135415) + (v_MWidthC_1 * v_i_135417))]); \n            if (v__135441_0) {\n            } else {\n              break;\n            }\n            float v_tmp_135502 = 0.0f; \n            v__135433 = v_tmp_135502; \n            int v_index_135503 = v__135422[(v_l_id_135416 + (512 * v_MWidthC_1 * v_w_id_135415) + (v_MWidthC_1 * v_i_135417))]; \n            if (v_index_135503 < 0) {\n              v__135435_0 = v__135433; \n            } else {\n              if (v_index_135503 >= v_VLength_3) {\n                v__135435_0 = v__135433; \n              } else {\n                v__135435_0 = v__135424[v_index_135503]; \n              }\n            }\n            v__135437_0 = mult(v__135435_0, v__135423[(v_l_id_135416 + (512 * v_MWidthC_1 * v_w_id_135415) + (v_MWidthC_1 * v_i_135417))]); \n            v__135431 = add(v__135437_0, v__135431); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_135418 = 0; \n            v__135442[v_l_id_135416] = id(v__135431); \n          }\n          /* end map_seq */\n          v_l_id_135416 = atomic_inc(&(v_work_idx_10924)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_10919; \n        v_work_idx_10919 = 0; \n        int v_l_id_135419 = atomic_inc(&(v_work_idx_10919)); \n        while((v_l_id_135419 < 1)){\n          float v_tmp_135506 = 0.0f; \n          v__105970 = v_tmp_135506; \n          /* reduce_seq */\n          for (int v_i_135420 = 0; v_i_135420 < v_MWidthC_1; v_i_135420 = (1 + v_i_135420)) {\n            v__105970 = add(v__105970, v__135442[(v_i_135420 + (v_MWidthC_1 * v_l_id_135419))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_135421 = 0; \n            v__135447[v_w_id_135415] = doubleMultiplyAdd(v__105970, v__135426, v__135425[v_w_id_135415], v__135427); \n          }\n          /* end map_seq */\n          v_l_id_135419 = atomic_inc(&(v_work_idx_10919)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_135415 = atomic_inc(v_work_idx_10926); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__135422",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__135423",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__135424",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__135425",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__135426",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__135427",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__135429",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__135447",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__135442",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}