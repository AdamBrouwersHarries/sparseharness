{
  "name" : "glb-sdp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__74381, const global float* restrict v__74382, const global float* restrict v__74383, const global float* restrict v__74384, float v__74385, float v__74386, global float* v__74399, global float* v__74393, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__74389; \n  float v__74394; \n  /* Private Memory */\n  float v__74391_0;\n  \n  for (int v_gl_id_74377 = get_global_id(0); v_gl_id_74377 < v_MHeight_2; v_gl_id_74377 = (v_gl_id_74377 + get_global_size(0))) {\n    /* map_seq */\n    for (int v_i_74378 = 0; v_i_74378 < v_MWidthC_1; v_i_74378 = (1 + v_i_74378)) {\n      float v_tmp_74431 = 3.4028235E38f; \n      v__74389 = v_tmp_74431; \n      int v_index_74432 = v__74381[(v_i_74378 + (v_MWidthC_1 * v_gl_id_74377))]; \n      if (v_index_74432 < 0) {\n        v__74391_0 = v__74389; \n      } else {\n        if (v_index_74432 >= v_VLength_3) {\n          v__74391_0 = v__74389; \n        } else {\n          v__74391_0 = v__74383[v_index_74432]; \n        }\n      }\n      v__74393[(-1 + v_MWidthC_1 + (-1 * v_i_74378) + (v_MWidthC_1 * v_gl_id_74377))] = absadd(v__74391_0, v__74382[(v_i_74378 + (v_MWidthC_1 * v_gl_id_74377))]); \n    }\n    /* end map_seq */\n    float v_tmp_74433 = 3.4028235E38f; \n    v__74394 = v_tmp_74433; \n    /* reduce_seq */\n    for (int v_i_74379 = 0; v_i_74379 < v_MWidthC_1; v_i_74379 = (1 + v_i_74379)) {\n      v__74394 = clmin(v__74394, v__74393[(v_i_74379 + (v_MWidthC_1 * v_gl_id_74377))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_74380 = 0; \n      v__74399[v_gl_id_74377] = doubleMultiplyAdd(v__74394, v__74385, v__74384[v_gl_id_74377], v__74386); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__74381",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74382",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74383",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__74384",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__74385",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__74386",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__74393",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__74399",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}