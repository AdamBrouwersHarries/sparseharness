{
  "name" : "glb-sdp-rsa",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nfloat id(float x){\n  { return x; }\n}\nkernel void KERNEL(const global int* restrict v__57064, const global float* restrict v__57065, const global float* restrict v__57066, const global float* restrict v__57067, float v__57068, float v__57069, global float* v__57082, global float* v__57081, int v_MHeight_2, int v_MWidthC_1){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__57071; \n  /* Private Memory */\n  float v__57075; \n  float v__57077; \n  for (int v_gl_id_57060 = get_global_id(0); v_gl_id_57060 < v_MHeight_2; v_gl_id_57060 = (v_gl_id_57060 + get_global_size(0))) {\n    float v_tmp_57107 = 3.4028235E38f; \n    v__57071 = v_tmp_57107; \n    /* reduce_seq */\n    int v_stop_57108 = min(v__57064[(1 + (v__57064[v_gl_id_57060] / 4))], ((global int*)(v__57065 + (((global int*)(v__57065))[v_gl_id_57060] / 4)))[1]); \n    for (int v_i_57061 = 0; v_i_57061 < v_stop_57108; v_i_57061 = (1 + v_i_57061)) {\n      float v_tmp_57116 = 3.4028235E38f; \n      v__57071 = v_tmp_57116; \n      int v_index_57118 = v__57064[(2 + v_i_57061 + (v__57064[v_gl_id_57060] / 4))]; \n      if (v_index_57118 < 0) {\n        v__57075 = v__57071; \n      } else {\n        if (v_index_57118 >= v_MWidthC_1) {\n          v__57075 = v__57071; \n        } else {\n          v__57075 = v__57066[v_index_57118]; \n        }\n      }\n      v__57077 = absadd(v__57065[(2 + v_i_57061 + (((global int*)(v__57065))[v_gl_id_57060] / 4))], v__57075); \n      v__57071 = clmin(v__57071, v__57077); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_57062 = 0; \n      v__57081[v_gl_id_57060] = doubleMultiplyAdd(v__57071, v__57068, v__57067[v_gl_id_57060], v__57069); \n    }\n    /* end map_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_57063 = 0; \n      v__57082[v_gl_id_57060] = id(v__57081[v_gl_id_57060]); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "arrayType" : "ragged"
  },
  "inputArgs" : [ {
    "variable" : "v__57064",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__57065",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__57066",
    "addressSpace" : "global",
    "size" : "(4*v_MWidthC_1)"
  }, {
    "variable" : "v__57067",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__57068",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__57069",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__57081",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  } ],
  "outputArg" : {
    "variable" : "v__57082",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC" ],
  "outputSize" : "(4*v_MHeight_2)"
}