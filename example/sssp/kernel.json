{
  "name" : "swrg-slcl-pmdp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__56798, const global float* restrict v__56799, const global float* restrict v__56800, const global float* restrict v__56801, float v__56802, float v__56803, global float* v__56816, global float* v__56810, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__56806; \n  float v__56811; \n  /* Private Memory */\n  float v__56808_0;\n  \n  for (int v_wg_id_56794 = get_group_id(0); v_wg_id_56794 < v_MHeight_2; v_wg_id_56794 = (v_wg_id_56794 + get_num_groups(0))) {\n    for (int v_l_id_56795 = get_local_id(0); v_l_id_56795 < v_MWidthC_1; v_l_id_56795 = (v_l_id_56795 + get_local_size(0))) {\n      float v_tmp_56856 = 3.4028235E38f; \n      v__56806 = v_tmp_56856; \n      int v_index_56857 = v__56798[(v_l_id_56795 + (v_MWidthC_1 * v_wg_id_56794))]; \n      if (v_index_56857 < 0) {\n        v__56808_0 = v__56806; \n      } else {\n        if (v_index_56857 >= v_VLength_3) {\n          v__56808_0 = v__56806; \n        } else {\n          v__56808_0 = v__56800[v_index_56857]; \n        }\n      }\n      v__56810[(-1 + v_MWidthC_1 + (-1 * v_l_id_56795) + (v_MWidthC_1 * v_wg_id_56794))] = absadd(v__56808_0, v__56799[(v_l_id_56795 + (v_MWidthC_1 * v_wg_id_56794))]); \n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n    float v_tmp_56858 = 3.4028235E38f; \n    v__56811 = v_tmp_56858; \n    /* reduce_seq */\n    for (int v_i_56796 = 0; v_i_56796 < v_MWidthC_1; v_i_56796 = (1 + v_i_56796)) {\n      v__56811 = clmin(v__56811, v__56810[(v_i_56796 + (v_MWidthC_1 * v_wg_id_56794))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_56797 = 0; \n      v__56816[v_wg_id_56794] = doubleMultiplyAdd(v__56811, v__56802, v__56801[v_wg_id_56794], v__56803); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__56798",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56799",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56800",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56801",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56802",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56803",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56810",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__56816",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}